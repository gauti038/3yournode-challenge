version: '2.1'

services:
  postgres:
    container_name: postgres
    image: postgres
    expose:
      - "5432"
    restart: always
    environment:
      POSTGRES_PASSWORD: realworld123
      POSTGRES_USER: realworld
      POSTGRES_DB: sample
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
  backend:
    image: gka038/backend-django:test1
    container_name: backend
    restart: always
    environment: 
      DATABASE_NAME: sample
      DATABASE_USER: realworld
      DATABASE_PASSWORD: realworld123
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
    expose:
      - "8000"
    depends_on:
      postgres:
        condition: service_healthy
  frontend:
    image: gka038/frontend-vue:test1
    container_name: frontend
    restart: always
    expose:
      - "80"
  reverse-proxy:
    image: gka038/reverse-proxy:test1
    container_name: reverse-proxy
    restart: always
    ports:
      - "9000:9000"
      - "9001:9001"
    depends_on:
      - "backend"
      - "frontend"
  scope:
    image: weaveworks/scope:1.10.2
    network_mode: "host"
    pid: "host"
    privileged: true
    labels:
      - "works.weave.role=system"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:rw"
    command:
      - "--probe.docker=true"
      - "--weave=false"
    ports:
      - "4040:4040"
    depends_on:
      - "backend"
